"""
Given a word, write a function to generate all of its unique generalized abbreviations.
A generalized abbreviation of a word can be generated by replacing each substring of the
word with the count of characters in the substring.

example1:
    Input: "BAT"
    Output: "BAT", "BA1", "B1T", "B2", "1AT", "1A1", "2T", "3"

example2:
    Input: "code"
    Output: "code", "cod1", "co1e", "co2", "c1de", "c1d1", "c2e", "c3", "1ode", "1od1", "1o1e", "1o2",
    "2de", "2d1", "3e", "4"
"""

from collections import deque


def generate_generalized_abbreviation_partially_correct(word):
    """
    Will fail in case of duplicate characters in word like sys
    """
    permutations = []
    if len(word) == 0:
        return permutations
    permutations.append(word)
    for i in range(len(word)):
        for j in range(len(permutations)):
            old_per = permutations[j][:]
            idx = old_per.find(word[i])
            if idx != -1:
                previous_char = old_per[idx - 1]
                if previous_char >= "1" and previous_char <= "9":
                    old_per = old_per[: idx - 1] + str(int(previous_char) + 1) + old_per[idx + 1 :]
                else:
                    old_per = old_per[:idx] + str(1) + old_per[idx + 1 :]

            permutations.append(old_per)

    return permutations


# print("Generalized abbreviation are: " + str(generate_generalized_abbreviation_partially_correct("BAT")))
# print("Generalized abbreviation are: " + str(generate_generalized_abbreviation_partially_correct("code")))
# print("Generalized abbreviation are: " + str(generate_generalized_abbreviation_partially_correct("sys")))
# print("Generalized abbreviation are: " + str(generate_generalized_abbreviation_partially_correct("stp")))
# print("Generalized abbreviation are: " + str(generate_generalized_abbreviation_partially_correct("system")))


def generate_generalized_abbreviation(word):
    result = []
    if len(word) == 0:
        return result
    queue = deque()
    queue.append("")
    abbvt = ""
    skip = ""
    for c in range(len(word)):
        size = len(queue)
        while size != 0:
            left = queue.popleft()
            size -= 1
            if c == 0:
                abbvt = str(1)
                skip = word[c]
            else:
                if left[-1] >= "0" and left[-1] <= "9":
                    abbvt = left[:-1] + str(int(left[-1]) + 1)
                    skip = left + word[c]
                else:
                    abbvt = left + str(1)
                    skip = left + word[c]
            queue.append(abbvt)
            queue.append(skip)
            if c == len(word) - 1:
                result.append(abbvt)
                result.append(skip)

    # return list(queue)
    return result


print("Generalized abbreviation are: " + str(generate_generalized_abbreviation("sys")))
print("Generalized abbreviation are: " + str(generate_generalized_abbreviation("stp")))
print("Generalized abbreviation are: " + str(generate_generalized_abbreviation("system")))
